/*
 * golympia - a turn based game
 * Copyright (c) 2022 Michael D Henderson
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as published
 * by the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public License
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.
 *
 */

package main

import (
	"bytes"
	"errors"
	"log"
	"os"
	"path/filepath"
	"text/template"
)

// Prints out the template without passing any value using the text/template package
func main() {
	tfm := template.FuncMap{
		"args": func(values ...interface{}) (map[string]interface{}, error) {
			if len(values)%2 != 0 {
				return nil, errors.New("invalid macro arguments")
			}
			args := make(map[string]interface{}, len(values)/2)
			for i := 0; i < len(values); i += 2 {
				key, ok := values[i].(string)
				if !ok {
					return nil, errors.New("argument keys must be strings")
				}
				args[key] = values[i+1]
			}
			return args, nil
		},
	}

	pats := []string{"???"}
	fileList := []string{"loops.tpl"}
	for _, pat := range pats {
		fileList = append(fileList, pat+".tpl")
	}
	t, err := template.New("").Funcs(tfm).ParseFiles(fileList...)
	if err != nil {
		log.Fatalln(err)
	}

	b := &bytes.Buffer{}
	b.WriteString("// Code generated by golympia/pkg/macros. DO NOT EDIT.\n")
	b.WriteString("package olympia\n")
	b.WriteByte('\n')
	b.WriteString("import \"log\"\n")
	for _, fn := range pats {
		b.WriteByte('\n')
		if err = t.ExecuteTemplate(b, fn, nil); err != nil {
			log.Fatalln(err)
		}
		b.WriteByte('\n')
	}
	filename := filepath.Join("..", "olympia", "loopers.go")
	if err = os.WriteFile(filename, b.Bytes(), 0666); err != nil {
		log.Fatalln(err)
	}
	log.Printf("created %q\n", filename)
}
